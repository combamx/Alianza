// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Alianza.Models
{
    public partial class AlianzaContext : DbContext
    {
        public AlianzaContext ( )
        {
        }

        public AlianzaContext ( DbContextOptions<AlianzaContext> options )
            : base ( options )
        {
        }

        public virtual DbSet<AccountNumber> AccountNumbers { get; set; }
        public virtual DbSet<AccountingAccount> AccountingAccounts { get; set; }
        public virtual DbSet<ExclusiveData> ExclusiveData { get; set; }
        public virtual DbSet<Request> Requests { get; set; }
        public virtual DbSet<User> Users { get; set; }

        protected override void OnConfiguring ( DbContextOptionsBuilder optionsBuilder )
        {
            //optionsBuilder.UseSqlServer ( "Data Source=LAPTOP-63IP0I8H;Initial Catalog=alianza;Integrated Security=True;Encrypt=False" );

            try
            {
                base.OnConfiguring ( optionsBuilder );
            }
            catch (Exception ex)
            {
                throw new Exception ( ex.Message , ex );
            }
        }

        protected override void OnModelCreating ( ModelBuilder modelBuilder )
        {
            modelBuilder.Entity<AccountNumber> ( entity =>
            {
                entity.ToTable ( "AccountNumber" );

                entity.Property ( e => e.Id ).HasColumnName ( "id" );

                entity.Property ( e => e.Authorize ).HasColumnName ( "authorize" );

                entity.Property ( e => e.Description )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "description" );

                entity.Property ( e => e.EmailNew )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "email_new" );

                entity.Property ( e => e.IdAccountingAccount ).HasColumnName ( "id_accounting_account" );

                entity.Property ( e => e.IdRequest ).HasColumnName ( "id_request" );

                entity.HasOne ( d => d.EmailNewNavigation )
                    .WithMany ( p => p.AccountNumbers )
                    .HasPrincipalKey ( p => p.Email )
                    .HasForeignKey ( d => d.EmailNew )
                    .OnDelete ( DeleteBehavior.ClientSetNull )
                    .HasConstraintName ( "FK__AccountNu__email__6C190EBB" );

                entity.HasOne ( d => d.IdAccountingAccountNavigation )
                    .WithMany ( p => p.AccountNumbers )
                    .HasForeignKey ( d => d.IdAccountingAccount )
                    .OnDelete ( DeleteBehavior.ClientSetNull )
                    .HasConstraintName ( "FK__AccountNu__id_ac__6D0D32F4" );
            } );

            modelBuilder.Entity<AccountingAccount> ( entity =>
            {
                entity.Property ( e => e.Id ).HasColumnName ( "id" );

                entity.Property ( e => e.Authorize ).HasColumnName ( "authorize" );

                entity.Property ( e => e.Description )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "description" );

                entity.Property ( e => e.EmailNew )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "email_new" );

                entity.Property ( e => e.IdRequest ).HasColumnName ( "id_request" );

                entity.HasOne ( d => d.EmailNewNavigation )
                    .WithMany ( p => p.AccountingAccounts )
                    .HasPrincipalKey ( p => p.Email )
                    .HasForeignKey ( d => d.EmailNew )
                    .OnDelete ( DeleteBehavior.ClientSetNull )
                    .HasConstraintName ( "FK__Accountin__email__693CA210" );
            } );

            modelBuilder.Entity<ExclusiveData> ( entity =>
            {
                entity.Property ( e => e.Id ).HasColumnName ( "id" );

                entity.Property ( e => e.Authorize ).HasColumnName ( "authorize" );

                entity.Property ( e => e.Description )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "description" );

                entity.Property ( e => e.EmailNew )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "email_new" );

                entity.Property ( e => e.IdRequest ).HasColumnName ( "id_request" );

                entity.HasOne ( d => d.EmailNewNavigation )
                    .WithMany ( p => p.ExclusiveData )
                    .HasPrincipalKey ( p => p.Email )
                    .HasForeignKey ( d => d.EmailNew )
                    .OnDelete ( DeleteBehavior.ClientSetNull )
                    .HasConstraintName ( "FK__Exclusive__email__628FA481" );
            } );

            modelBuilder.Entity<Request> ( entity =>
            {
                entity.Property ( e => e.Id ).HasColumnName ( "id" );

                entity.Property ( e => e.ApplyDate )
                    .HasColumnType ( "date" )
                    .HasColumnName ( "apply_date" );

                entity.Property ( e => e.AuthorizeGeneral ).HasColumnName ( "authorize_general" );

                entity.Property ( e => e.AuthorizeHr ).HasColumnName ( "authorize_hr" );

                entity.Property ( e => e.AuthorizeIt ).HasColumnName ( "authorize_it" );

                entity.Property ( e => e.AuthorizeOperational ).HasColumnName ( "authorize_operational" );

                entity.Property ( e => e.Date )
                    .HasColumnType ( "date" )
                    .HasColumnName ( "date" );

                entity.Property ( e => e.Email )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "email" );

                entity.Property ( e => e.EmailNew )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "email_new" );

                entity.Property ( e => e.EndDate )
                    .HasColumnType ( "date" )
                    .HasColumnName ( "end_date" );

                entity.Property ( e => e.GeneralManager )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "general_manager" );

                entity.Property ( e => e.Hr )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "hr" );

                entity.Property ( e => e.ItManager )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "it_manager" );

                entity.Property ( e => e.OperationalManager )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "operational_manager" );

                entity.Property ( e => e.Shift )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "shift" );

                entity.Property ( e => e.Status ).HasColumnName ( "status" );

                entity.Property ( e => e.Type )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "type" );

                entity.Property ( e => e.Undefined ).HasColumnName ( "undefined" );

                entity.HasOne ( d => d.EmailNavigation )
                    .WithMany ( p => p.Requests )
                    .HasPrincipalKey ( p => p.Email )
                    .HasForeignKey ( d => d.Email )
                    .OnDelete ( DeleteBehavior.ClientSetNull )
                    .HasConstraintName ( "FK__Requests__email__5FB337D6" );
            } );

            modelBuilder.Entity<User> ( entity =>
            {
                entity.HasIndex ( e => e.Email , "UQ__Users__AB6E61641DD661AD" )
                    .IsUnique ( );

                entity.Property ( e => e.Id ).HasColumnName ( "id" );

                entity.Property ( e => e.Branch )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "branch" );

                entity.Property ( e => e.Email )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "email" );

                entity.Property ( e => e.Name )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "name" );

                entity.Property ( e => e.Password )
                    .IsRequired ( )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "password" );

                entity.Property ( e => e.Position )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "position" );

                entity.Property ( e => e.Profile )
                    .HasMaxLength ( 255 )
                    .IsUnicode ( false )
                    .HasColumnName ( "profile" );
            } );

            OnModelCreatingPartial ( modelBuilder );
        }

        partial void OnModelCreatingPartial ( ModelBuilder modelBuilder );
    }
}